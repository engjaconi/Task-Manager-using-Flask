name: Docker CI

on:
  pull_request:
    branches:
      - uat

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and tag the Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo:uat .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest --cov-report=html --html=test/test-results.html
      
      - name: Export Report
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: /home/runner/work/Task-Manager-using-Flask/Task-Manager-using-Flask/test/test-results.html
  
  bandit:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - uses: ioggstream/bandit-report-artifacts@v0.0.2
        with:
          project_path: .
          ignore_failure: true

      - name: Security check report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Bandit report
          path: output/security_report.txt
      
  dependency-check:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
  
  zap_scan:
    runs-on: ubuntu-latest
    needs: [bandit,  dependency-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t flask-app .

      - name: Run Flask app in Docker
        run: |
          docker run -d -p 5000:5000  --network=host --name flask-container -v $(pwd):/zap/wrk flask-app
          sleep 10
      
      - name: Fix permissions for ZAP
        run: sudo chmod -R 777 $(pwd)

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: "http://localhost:5000"
          fail-action: false

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP Report
          path: report_html.html

      - name: Stop Docker container
        if: always()
        run: docker stop flask-container
  
  Deploy:
    runs-on: ubuntu-latest
    needs: zap_scan
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and tag the Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo:uat .

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
            context: .
            push: true       
            tags: ${{ secrets.DOCKER_USERNAME }}/uat:latest
            token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}