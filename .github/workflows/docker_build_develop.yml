name: Docker CI

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and tag the Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo:develop .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest --cov-report=html --html=test/test-results.html
      
      - name: Export Report
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: /home/runner/work/Task-Manager-using-Flask/Task-Manager-using-Flask/test/test-results.html
  
  bandit:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - uses: ioggstream/bandit-report-artifacts@v0.0.2
        with:
          project_path: .
          ignore_failure: true

      - name: Security check report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Bandit report
          path: output/security_report.txt
      
  dependency-check:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
  
  zap_scan:
    runs-on: ubuntu-latest
    needs: [bandit,  dependency-check]
    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://www.zaproxy.org/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'