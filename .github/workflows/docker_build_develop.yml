name: Docker CI

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Build and tag the Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo:develop .

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/todo:develop

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Start services with Docker Compose
        run: docker-compose up -d

      - name: Run tests
        run: docker-compose exec web ./run-tests.sh

      - name: Stop services
        run: docker-compose down

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run Bandit
        run: pip install bandit && bandit -r .

      - name: Run OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.0.3/dependency-check-6.0.3-release.zip
          unzip dependency-check-6.0.3-release.zip
          ./dependency-check/bin/dependency-check.sh --project "Todo App" --scan .

      - name: Start the Flask app
        run: docker-compose up -d

      - name: Wait for Flask app to be ready
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:5000; do
            echo "Waiting for the app to start..."
            sleep 5
          done

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:5000'
          cmd_options: '-a -m 5 -r zap_report.html'

      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html

      - name: Stop Flask app
        run: docker-compose down

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test, security]
    steps:
      - name: Deploy to Docker Hub
        run: echo "Deploy step"
